<?php
/**
 * Widgets generated by this plugin.
 *
 * @package Entravision_Plugins
 */

/**
 * Widget that prints a list of markets.
 *
 * @todo Integrate JS functionality to open/close menu currently placed in
 * the Hamburger Menu plugin.
 */
class Geolocation_Markets_Widget extends WP_Widget {
	function __construct() {
		parent::__construct( false, __( 'Market List', 'geolocation' ) );
	}

	function widget( $args, $instance ) {
		$markets = geolocation_get_markets();

		if ( ! empty( $markets ) ) {
			echo wp_kses_post( $args['before_widget'] );

			if ( ! empty( $instance['title'] ) ) {
				echo wp_kses_post( $args['before_title'] . apply_filters( 'widget_title', $instance['title'] ). $args['after_title'] );
			}
			?>
<div id="markets-manager" class="markets-frame">
			<?php

			if ( $instance['allow_closing'] ) {
				?>
	<a id="advisor-open" class="adv-location">
		<?php esc_html_e( 'Change Location', 'geolocation' ); ?>
	</a>
	<a id="advisor-close" class="adv-close">
		<?php esc_html_e( 'Close', 'geolocation' ); ?>
	</a>
				<?php
			}

			?>
	<div class="markets-container">
			<?php

			$columns 			= $instance['columns'];
			$count_markets		= count( $markets );
			$items_per_column	= ceil( $count_markets / $columns );

			for ( $i = 0; $i < $count_markets; $i++ ) {
				$market = $markets[ $i ];

				if ( 0 === $i % $items_per_column ) {
					$last_column = $i + $items_per_column >= $count_markets;
					?>
		<ul class="markets-list<?php echo $last_column ? ' last' : ''; ?>">					
					<?php
				}

				$class = '';

				/**
				 * Patch for backwards compatibility.
				 */
				if ( $i > 5 ) {
					$class = $i + 1;
				}

				// VIP: hotfix fatals.
				$term_link = get_term_link( $market->term_id );
				if ( true === is_wp_error( $term_link ) ) {
					$term_link = '';	
				}

				?>
			<li<?php echo $class ? ' class="' . esc_attr( $class ) . '"' : ''; ?>>
				<a class="location-setter" title="<?php echo esc_attr( $market->name ); ?>" href="<?php echo esc_attr( $term_link ); ?>"><?php echo esc_html( $market->name ); ?></a>
			</li>
				<?php

				if ( $items_per_column - 1 == $i % $items_per_column ||
					 $i === $count_markets - 1 ) {
					?>
		</ul>
					<?php
				}
			}

			?>
	</div>
			<?php

			if ( $instance['allow_closing'] ) {
				?>
	<div class="mobile-markets-layer-close"><?php esc_html_e( 'Close', 'geolocation' ); ?></div>				
				<?php
			}

			?>
</div>
			<?php

			echo wp_kses_post( $args['after_widget'] );
		}
	}

	function update( $new_instance, $old_instance ) {
		$new_instance['title'] 			= isset( $new_instance['title'] ) ? sanitize_text_field( $new_instance['title'] ) : '';
		$new_instance['allow_closing'] 	= ! empty( $new_instance['allow_closing'] );
		$new_instance['columns'] 		= ! empty( $new_instance['columns'] ) ? absint( $new_instance['columns'] ) : 1;

		return $new_instance;
	}

	function form( $instance ) {
		$instance = wp_parse_args( $instance,
			array(
				'title' 		=> '',
				'columns' 		=> 5,
				'allow_closing'	=> false,
			)
		);
?>
<p>
	<label for="<?php echo esc_attr( $this->get_field_id( 'title' ) ); ?>"><?php esc_html_e( 'Title:', 'geolocation' ); ?></label>
	<input class="widefat" id="<?php echo esc_attr( $this->get_field_id( 'title' ) ); ?>" name="<?php echo esc_attr( $this->get_field_name( 'title' ) ); ?>" type="text" value="<?php echo esc_attr( $instance['title'] ); ?>" />
</p>
<p>
	<label for="<?php echo esc_attr( $this->get_field_id( 'allow_closing' ) ); ?>"><?php esc_html_e( 'Allow Closing?:', 'geolocation' ); ?></label>
	<input id="<?php echo esc_attr( $this->get_field_id( 'allow_closing' ) ); ?>" name="<?php echo esc_attr( $this->get_field_name( 'allow_closing' ) ); ?>" type="checkbox"<?php checked( $instance['allow_closing'] ); ?> />
</p>
<p>
	<label for="<?php echo esc_attr( $this->get_field_id( 'columns' ) ); ?>"><?php esc_html_e( 'Columns:', 'geolocation' ); ?></label>
	<input class="widefat" id="<?php echo esc_attr( $this->get_field_id( 'columns' ) ); ?>" name="<?php echo esc_attr( $this->get_field_name( 'columns' ) ); ?>" type="number" value="<?php echo esc_attr( $instance['columns'] ); ?>" min="1" max="10" />
</p>
<?php
	}
}

/**
 * Prints a link to the current market archive. 
 */
class Geolocation_Market_Link extends WP_Widget {
	function __construct() {
		parent::__construct( false, __( 'Market Link', 'geolocation' ) );
	}

	function widget( $args, $instance ) {
		$market_id = geolocation_get_current_market_id();

		if ( ! $market_id ) {
			$global_market = geolocation_get_global_market();

			if ( $global_market ) {
				$market_id = $global_market->term_id;
			}
		}

		if ( $market_id ) {
			remove_filter( 'term_link', 'geolocation_term_link_filter', 10, 3 );

			$link = wpcom_vip_get_term_link( $market_id, 'market' );

			add_filter( 'term_link', 'geolocation_term_link_filter', 10, 3 );
		}

		if ( $link ) {
			echo wp_kses_post( $args['before_widget'] );

			echo '<a href="' . esc_url( $link ) . '">';

			if ( ! empty( $instance['title'] ) ) {
				echo wp_kses_post( $args['before_title'] . apply_filters( 'widget_title', $instance['title'] ). $args['after_title'] );
			}

			echo '</a>';

			echo wp_kses_post( $args['after_widget'] );
		}
	}

	function form( $instance ) {
		$instance = wp_parse_args( $instance,
			array(
				'title' 		=> '',
			)
		);
?>
<p>
	<label for="<?php echo esc_attr( $this->get_field_id( 'title' ) ); ?>"><?php esc_html_e( 'Title:', 'geolocation' ); ?></label>
	<input class="widefat" id="<?php echo esc_attr( $this->get_field_id( 'title' ) ); ?>" name="<?php echo esc_attr( $this->get_field_name( 'title' ) ); ?>" type="text" value="<?php echo esc_attr( $instance['title'] ); ?>" />
</p>
<?php
	}
}

add_action( 'widgets_init', function() {
	register_widget( 'Geolocation_Markets_Widget' );
	register_widget( 'Geolocation_Market_Link' );
} );
